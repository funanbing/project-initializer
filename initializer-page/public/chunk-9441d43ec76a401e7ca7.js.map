{"version":3,"sources":["webpack:///./src/styles/fetch.scss?dbdd","webpack:///./src/styles/fetch.scss","webpack:///./src/components/common/fetch/Fetch.js"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","Fetch","open","onClose","windowsUtils","useWindowsUtils","origin","values","useContext","InitializrContext","dependencies","AppContext","config","get","params","getQueryString","gitUrl","meta","artifact","downloadUrl","useState","button","setButton","onDownload","useRef","a","url","getProject","catch","toast","error","project","FileSaver","saveAs","classNames","modal","overlay","center","class","value","readonly","href","onClick","e","preventDefault","onCopy","setTimeout","text","propTypes","PropTypes","bool","isRequired","func"],"mappings":"6EAAA,IAAIA,EAAM,EAAQ,IACFC,EAAU,EAAQ,KAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,OACjB,WAAoB,GAEPN,EAAIC,EAASK,GAI1BF,EAAOG,QAAUN,EAAQO,QAAU,I,qBChBnCD,EADkC,EAAQ,GAChCE,EAA4B,IAE9BC,KAAK,CAACN,EAAOC,EAAI,0dAA2d,KAEpfD,EAAOG,QAAUA,G,iOCQjB,SAASI,EAAT,GAAkC,IAAjBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACbC,EAAeC,cACfC,EAAS,GAAH,OAAMF,EAAaE,QACvBC,EAAWC,qBAAWC,KAAtBF,OACAG,EAAiBF,qBAAWG,KAA5BD,aAEFE,EAASC,IAAIH,EAAc,QAE3BI,EAASC,YAAeR,EAAQK,GAEhCI,EAAS,cAAgB,GAAhB,OAAmBV,EAAnB,YAA6BQ,EAA7B,YAAuCP,EAAOU,KAAKC,SAAnD,QAAoE,KAApE,UAA8EX,EAAOU,KAAKC,UACnGC,EAAc,GAAH,OAAMb,EAAN,wBAA4BQ,GAXf,EAaFM,mBAAS,MAbP,WAavBC,EAbuB,KAafC,EAbe,KAuBxBC,GATQC,iBAAO,MASL,+BAAG,8BAAAC,EAAA,6DACTC,EADS,UACAtB,EAAaE,OADb,yBAEOqB,YACpBD,EACAnB,EACAM,IAAIH,EAAc,SAClBkB,OAAM,WACNC,IAAMC,MAAN,8DAPa,OAETC,EAFS,OASfC,IAAUC,OAAOF,EAAjB,UAA6BlB,IAAIN,EAAQ,iBAAzC,SACAJ,IACAmB,EAAU,MAXK,2CAAH,sDAalB,OACE,6BACI,kBAAC,IAAD,CACIpB,KAAMA,EACNC,QAAS,WACPA,IACAmB,EAAU,OAEZY,WAAY,CAAEC,MAAO,cAAeC,QAAS,WAC7CC,QAAM,GAER,6BACI,wCACA,6BACE,yBAAKC,MAAM,wBACP,wCACA,2BAAOA,MAAM,gBAAgBC,MAAOpB,EAAaqB,UAAQ,IACrD,uBACIC,KAAK,KACLC,QAAS,SAAAC,GACLA,EAAEC,iBACFrB,MAJR,OAQR,yBAAKe,MAAM,wBACP,+CACA,2BAAOA,MAAM,gBAAgBC,MAAOvB,EAAQwB,UAAQ,IACpD,kBAAC,kBAAD,CAAiBK,OAjDlB,WACXvB,EAAU,QACVwB,YAAW,WACT3C,IACAmB,EAAU,QACT,MA4C0CyB,KAAM/B,GACvC,uBACIyB,KAAK,KACLC,QAAS,SAAAC,GACLA,EAAEC,mBAERvB,SAUtBpB,EAAM+C,UAAY,CAChB9C,KAAM+C,IAAUC,KAAKC,WACrBhD,QAAS8C,IAAUG,KAAKD,YAGXlD","file":"chunk-9441d43ec76a401e7ca7.js","sourcesContent":["var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./fetch.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".modal-fetch{padding:10px 30px 10px 30px;height:300px;width:700px}.modal-fetch h2{border-bottom:solid 3px #ff6a00;padding-bottom:10px}.modal-fetch .fetch-method{margin-bottom:20px}.modal-fetch .fetch-method span{display:inline-block;width:150px;font-weight:bold}.modal-fetch .fetch-method input{padding-right:70px;display:inline-block}.modal-fetch .fetch-method a{width:60px;position:absolute;right:20px;color:#ff6a00}.modal-fetch .fetch-method a:visited{color:#ff6a00}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import '../../../styles/fetch.scss'\r\n\r\nimport get from 'lodash.get'\r\nimport PropTypes from 'prop-types'\r\nimport React, {useContext, useRef, useState,} from 'react'\r\nimport {toast} from 'react-toastify'\r\nimport Modal from 'react-responsive-modal'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\r\nimport FileSaver from 'file-saver'\r\nimport useWindowsUtils from '../../utils/WindowsUtils'\r\nimport {InitializrContext} from '../../reducer/Initializr'\r\nimport {getProject, getQueryString} from '../../utils/ApiUtils'\r\nimport {AppContext} from '../../reducer/App'\r\n\r\nfunction Fetch({ open, onClose }) {\r\n    const windowsUtils = useWindowsUtils()\r\n    const origin = `${windowsUtils.origin}`\r\n    const { values } = useContext(InitializrContext)\r\n    const { dependencies } = useContext(AppContext)\r\n\r\n    const config = get(dependencies, 'list')\r\n\r\n    const params = getQueryString(values, config)\r\n\r\n    const gitUrl = 'git clone \"' + `${origin}/${params}/${values.meta.artifact}.git` + '\" ' + `${values.meta.artifact}`\r\n    const downloadUrl = `${origin}/starter.zip?${params}`\r\n\r\n    const [button, setButton] = useState('复制')\r\n    const input = useRef(null)\r\n    const onCopy = () => {\r\n        setButton('已复制!')\r\n        setTimeout(() => {\r\n          onClose()\r\n          setButton('复制')\r\n        }, 500)\r\n    }\r\n\r\n    const onDownload = async () => {\r\n        const url = `${windowsUtils.origin}/starter.zip`\r\n        const project = await getProject(\r\n          url,\r\n          values,\r\n          get(dependencies, 'list')\r\n        ).catch(() => {\r\n          toast.error(`Could not connect to server. Please check your network.`)\r\n        })\r\n        FileSaver.saveAs(project, `${get(values, 'meta.artifact')}.zip`)\r\n        onClose()\r\n        setButton('复制')\r\n    }\r\n  return (\r\n    <div>\r\n        <Modal\r\n            open={open}\r\n            onClose={() => {\r\n              onClose()\r\n              setButton('复制')\r\n            }}\r\n            classNames={{ modal: 'modal-fetch', overlay: 'overlay' }}\r\n            center\r\n            >\r\n          <div>\r\n              <h2>获取完整项目代码</h2>\r\n              <div>\r\n                <div class=\"fetch-method control\">\r\n                    <span>下载代码包：</span>\r\n                    <input class=\"control-input\" value={downloadUrl} readonly />\r\n                        <a\r\n                            href='/#'\r\n                            onClick={e => {\r\n                                e.preventDefault()\r\n                                onDownload()\r\n                            }}\r\n                        >下载</a>\r\n                </div>\r\n                <div class=\"fetch-method control\">\r\n                    <span>Git Clone 命令：</span>\r\n                    <input class=\"control-input\" value={gitUrl} readonly />\r\n                    <CopyToClipboard onCopy={onCopy} text={gitUrl}>\r\n                    <a\r\n                        href='/#'\r\n                        onClick={e => {\r\n                            e.preventDefault()\r\n                        }}\r\n                    >{button}</a>\r\n                    </CopyToClipboard>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nFetch.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Fetch\r\n"],"sourceRoot":""}